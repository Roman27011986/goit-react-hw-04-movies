{"version":3,"sources":["services/apiMovies.js","components/MoviesListItem/MovieListItem.module.css","components/MoviesList/MoviesList.module.css","components/MoviesListItem/MovieListItem.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.module.css","components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviesPage.jsx"],"names":["axios","defaults","baseURL","apiKey","getTrendsMovies","a","get","trendMovies","getMovieDitails","movieId","movieDitails","getMoviesByName","query","moviesName","getReviewsToMovie","reviews","data","getCast","module","exports","MovieListItem","to","pathname","this","props","id","state","from","location","className","styles","link","onTitle","Component","withRouter","onMovies","list","map","original_title","Searchbar","handleChange","event","setState","currentTarget","value","hendleSubmit","preventDefault","onSubmit","form","type","onChange","input","placeholder","autoComplete","autoFocus","MoviesPage","serchMovies","onSubmitQuery","history","push","search","fetchMovies","then","results","URLSearchParams","prevProps","prevState","MoviesList"],"mappings":"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","file":"static/js/MoviesPage.7d324b03.chunk.js","sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst apiKey = '0900e674aa431a5cac8b8b166be20d60';\r\n\r\nexport const getTrendsMovies = async () => {\r\n  const trendMovies = await axios.get(\r\n    `trending/all/day?api_key=${apiKey}&page=1`,\r\n  );\r\n  return trendMovies;\r\n};\r\n\r\nexport const getMovieDitails = async movieId => {\r\n  const movieDitails = await axios.get(`movie/${movieId}?api_key=${apiKey}`);\r\n\r\n  return movieDitails;\r\n};\r\n\r\nexport const getMoviesByName = async query => {\r\n  const moviesName = await axios.get(\r\n    `/search/movie?api_key=${apiKey}&query=${query}`,\r\n  );\r\n\r\n  return moviesName;\r\n};\r\n\r\nexport const getReviewsToMovie = async movieId => {\r\n  const reviews = await axios.get(`movie/${movieId}/reviews?api_key=${apiKey}`);\r\n  return reviews.data;\r\n};\r\n\r\nexport const getCast = async movieId => {\r\n  const reviews = await axios.get(`movie/${movieId}/credits?api_key=${apiKey}`);\r\n\r\n  return reviews;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"MovieListItem_link__2_i5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MoviesList_list__1hO9R\"};","import { Link, withRouter } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport styles from './MovieListItem.module.css'\r\nclass MovieListItem extends Component {\r\n\r\n    \r\n    \r\n\r\nrender() {\r\n      return (\r\n            <li>\r\n              <Link\r\n                  \r\n                to={{\r\n                    pathname: `/movies/${this.props.id}`,\r\n                    state: { from: this.props.location },\r\n                    \r\n                }} className={styles.link}>\r\n                {this.props.onTitle}\r\n            </Link>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(MovieListItem) ","import {   withRouter } from 'react-router-dom';\r\nimport MoviesListItem from '../MoviesListItem/MovieListItem'\r\nimport styles from './MoviesList.module.css'\r\n\r\nconst MoviesList = ({ onMovies }) => {\r\n    \r\n    return (\r\n        <ul className={styles.list}>\r\n        \r\n            {onMovies.map(({ id, original_title }) => (\r\n                < MoviesListItem\r\n                    key={id}\r\n                    onTitle={original_title}\r\n                    id={id}\r\n                    \r\n                    \r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\nexport default withRouter(MoviesList) ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchBar_form__mHO3p\",\"input\":\"SearchBar_input__2V3lP\"};","import React, { Component } from 'react';\r\nimport styles from './SearchBar.module.css'\r\nclass Searchbar extends Component {\r\n    state = {\r\n      query: ''\r\n    }\r\n    \r\n    handleChange = event => {\r\n        this.setState({query:event.currentTarget.value})\r\n    }\r\n    hendleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.query)\r\n       \r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <form className={styles.form} onSubmit={this.hendleSubmit}>\r\n                <input type=\"text\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.query}\r\n                    className={styles.input}\r\n                    placeholder=\"Search movies\"\r\n                    autoComplete=\"off\"\r\n                        autoFocus\r\n                />\r\n                <button type='submit' >Search</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Searchbar","\r\nimport React, { Component } from 'react';\r\nimport Searchbar from '../../components/SearchBar'\r\nimport MoviesList from '../../components/MoviesList'\r\nimport {getMoviesByName} from '../../services/apiMovies'\r\nclass MoviesPage extends Component {\r\n\r\n    state = {\r\n    \r\n        serchMovies: [],\r\n        query:''\r\n        \r\n    }\r\n \r\n    \r\n    componentDidMount() {\r\n       \r\n        const query = new URLSearchParams(this.props.location.search).get('query');\r\n        query ?\r\n            this.setState({query:query})\r\n               :\r\n            this.setState({ query: '' })\r\n        \r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        \r\n        if (prevState.query !== this.state.query) {\r\n            this.fetchMovies()\r\n          }\r\n       }\r\n   \r\n    \r\n    onSubmitQuery = (value) => {\r\n        \r\n         this.setState({query:value})\r\n        this.props.history.push({\r\n            pathname: this.props.location.pathname,\r\n            search: `query=${value}`,\r\n        });\r\n        \r\n\r\n    }\r\n    \r\n    fetchMovies = () => {\r\n         const { query } = this.state;\r\n        getMoviesByName(query)\r\n        .then(({ data }) =>\r\n            this.setState({\r\n                serchMovies: data.results\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <h1>MoviesPage</h1>\r\n                <Searchbar onSubmit={this.onSubmitQuery} />\r\n                <MoviesList onMovies={this.state.serchMovies}  />\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviesPage\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}